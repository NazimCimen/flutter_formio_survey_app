// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_survey_app_mobile/test/splash/data/splash_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:flutter_survey_app_mobile/core/error/failure.dart' as _i6;
import 'package:flutter_survey_app_mobile/feature/splash/data/data_source/splash_local_data_source.dart'
    as _i3;
import 'package:flutter_survey_app_mobile/feature/splash/data/data_source/splash_remote_data_source.dart'
    as _i5;
import 'package:flutter_survey_app_mobile/feature/splash/data/model/app_version_model.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SplashLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSplashLocalDataSource extends _i1.Mock
    implements _i3.SplashLocalDataSource {
  MockSplashLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool?> checkCacheOnboardShown() => (super.noSuchMethod(
        Invocation.method(
          #checkCacheOnboardShown,
          [],
        ),
        returnValue: _i4.Future<bool?>.value(),
      ) as _i4.Future<bool?>);
}

/// A class which mocks [SplashRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSplashRemoteDataSource extends _i1.Mock
    implements _i5.SplashRemoteDataSource {
  MockSplashRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i6.Failure, _i7.AppVersionModel>>
      getAppDatabaseVersionNumber({required String? platform}) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAppDatabaseVersionNumber,
              [],
              {#platform: platform},
            ),
            returnValue:
                _i4.Future<_i2.Either<_i6.Failure, _i7.AppVersionModel>>.value(
                    _FakeEither_0<_i6.Failure, _i7.AppVersionModel>(
              this,
              Invocation.method(
                #getAppDatabaseVersionNumber,
                [],
                {#platform: platform},
              ),
            )),
          ) as _i4.Future<_i2.Either<_i6.Failure, _i7.AppVersionModel>>);
}
