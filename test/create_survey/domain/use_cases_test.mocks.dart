// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_survey_app/test/create_survey/domain/use_cases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i8;

import 'package:dartz/dartz.dart' as _i2;
import 'package:flutter_survey_app_mobile/core/error/failure.dart' as _i5;
import 'package:flutter_survey_app_mobile/feature/create_survey/domain/repository/create_survey_repository.dart'
    as _i3;
import 'package:flutter_survey_app_mobile/feature/shared_layers/domain/entity/question_entity.dart'
    as _i10;
import 'package:flutter_survey_app_mobile/feature/shared_layers/domain/entity/survey_entity.dart'
    as _i9;
import 'package:image_cropper/image_cropper.dart' as _i7;
import 'package:image_picker/image_picker.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CreateSurveyRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateSurveyRepository extends _i1.Mock
    implements _i3.CreateSurveyRepository {
  MockCreateSurveyRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.XFile?>> getImage(
          {required _i6.ImageSource? source}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getImage,
          [],
          {#source: source},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.XFile?>>.value(
            _FakeEither_0<_i5.Failure, _i6.XFile?>(
          this,
          Invocation.method(
            #getImage,
            [],
            {#source: source},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.XFile?>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.XFile?>> cropImage({
    required _i6.XFile? imageFile,
    required _i7.CropAspectRatio? cropRatio,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #cropImage,
          [],
          {
            #imageFile: imageFile,
            #cropRatio: cropRatio,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.XFile?>>.value(
            _FakeEither_0<_i5.Failure, _i6.XFile?>(
          this,
          Invocation.method(
            #cropImage,
            [],
            {
              #imageFile: imageFile,
              #cropRatio: cropRatio,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.XFile?>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> getImageUrl({
    required _i8.Uint8List? imageBytes,
    required String? path,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getImageUrl,
          [],
          {
            #imageBytes: imageBytes,
            #path: path,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
            _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #getImageUrl,
            [],
            {
              #imageBytes: imageBytes,
              #path: path,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> shareSurveyInfo(
          {required _i9.SurveyEntity? entity}) =>
      (super.noSuchMethod(
        Invocation.method(
          #shareSurveyInfo,
          [],
          {#entity: entity},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #shareSurveyInfo,
            [],
            {#entity: entity},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> shareQuestions(
          {required List<_i10.QuestionEntity>? questionEntityList}) =>
      (super.noSuchMethod(
        Invocation.method(
          #shareQuestions,
          [],
          {#questionEntityList: questionEntityList},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #shareQuestions,
            [],
            {#questionEntityList: questionEntityList},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> removeSurvey(
          {required String? surveyId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeSurvey,
          [],
          {#surveyId: surveyId},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #removeSurvey,
            [],
            {#surveyId: surveyId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);

  @override
  _i4.Future<void> cacheDatasNoInternet({
    required String? path,
    required String? surveyId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheDatasNoInternet,
          [],
          {
            #path: path,
            #surveyId: surveyId,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
