// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_survey_app_mobile/test/create_survey/data/create_survey_local_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_survey_app_mobile/core/cache/cache_manager/standart_cache_manager.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [StandartCacheManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockStandartCacheManager<T> extends _i1.Mock
    implements _i2.StandartCacheManager<T> {
  MockStandartCacheManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get boxName => (super.noSuchMethod(
        Invocation.getter(#boxName),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#boxName),
        ),
      ) as String);

  @override
  _i4.Future<void> saveData({
    required T? data,
    required String? keyName,
    bool? encrypt = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveData,
          [],
          {
            #data: data,
            #keyName: keyName,
            #encrypt: encrypt,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<T?> getData({
    required String? keyName,
    bool? decrypt = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getData,
          [],
          {
            #keyName: keyName,
            #decrypt: decrypt,
          },
        ),
        returnValue: _i4.Future<T?>.value(),
      ) as _i4.Future<T?>);

  @override
  _i4.Future<void> clearData({required String? keyName}) => (super.noSuchMethod(
        Invocation.method(
          #clearData,
          [],
          {#keyName: keyName},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
